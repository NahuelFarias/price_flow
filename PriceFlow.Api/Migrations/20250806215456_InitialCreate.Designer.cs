// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PriceFlow.Api.Infraestructure.Database;

#nullable disable

namespace PriceFlow.Api.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20250806215456_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("PriceFlow.Api.Domain.Entities.Canal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("NombreCanal")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("NombreCanal")
                        .IsUnique();

                    b.ToTable("canales");
                });

            modelBuilder.Entity("PriceFlow.Api.Domain.Entities.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("NombreCliente")
                        .IsUnique();

                    b.ToTable("clientes");
                });

            modelBuilder.Entity("PriceFlow.Api.Domain.Entities.Precio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CanalId")
                        .HasColumnType("int");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CanalId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("ProductoId", "ClienteId", "CanalId")
                        .IsUnique();

                    b.ToTable("precios");
                });

            modelBuilder.Entity("PriceFlow.Api.Domain.Entities.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Sku")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("Sku")
                        .IsUnique();

                    b.ToTable("productos");
                });

            modelBuilder.Entity("PriceFlow.Api.Domain.Entities.Promocion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Condicion")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("FechaFinVigenciaUTC")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaInicioVigenciaUTC")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductoId");

                    b.ToTable("promociones");
                });

            modelBuilder.Entity("PriceFlow.Api.Domain.Entities.Venta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaTransaccionUTC")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("IdentificadorVenta")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("PrecioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdentificadorVenta")
                        .IsUnique();

                    b.HasIndex("PrecioId");

                    b.ToTable("ventas");
                });

            modelBuilder.Entity("PromocionVenta", b =>
                {
                    b.Property<int>("PromocionesId")
                        .HasColumnType("int");

                    b.Property<int>("VentaId")
                        .HasColumnType("int");

                    b.HasKey("PromocionesId", "VentaId");

                    b.HasIndex("VentaId");

                    b.ToTable("PromocionVenta");
                });

            modelBuilder.Entity("PriceFlow.Api.Domain.Entities.Precio", b =>
                {
                    b.HasOne("PriceFlow.Api.Domain.Entities.Canal", "Canal")
                        .WithMany()
                        .HasForeignKey("CanalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PriceFlow.Api.Domain.Entities.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PriceFlow.Api.Domain.Entities.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Canal");

                    b.Navigation("Cliente");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("PriceFlow.Api.Domain.Entities.Promocion", b =>
                {
                    b.HasOne("PriceFlow.Api.Domain.Entities.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("PriceFlow.Api.Domain.Entities.Venta", b =>
                {
                    b.HasOne("PriceFlow.Api.Domain.Entities.Precio", "Precio")
                        .WithMany()
                        .HasForeignKey("PrecioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Precio");
                });

            modelBuilder.Entity("PromocionVenta", b =>
                {
                    b.HasOne("PriceFlow.Api.Domain.Entities.Promocion", null)
                        .WithMany()
                        .HasForeignKey("PromocionesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PriceFlow.Api.Domain.Entities.Venta", null)
                        .WithMany()
                        .HasForeignKey("VentaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
